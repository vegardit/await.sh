# old build file for Travis CI
# https://docs.travis-ci.com/user/customizing-the-build
# https://github.com/travis-ci/travis-yml/blob/master/schema.json
dist: bionic

language: bash # using 'bash' instead of 'minimal' to prevent https://travis-ci.community/t/job-stuck-booting/4976

addons:
  apt:
    packages:
      - ash
      - busybox-static
      - parallel
      - ksh
      - zsh

git:
  depth: 2

# https://docs.travis-ci.com/user/build-matrix/

jobs:
  fast_finish: true
  allow_failures:
    - os: osx
    - os: windows
  include:
    # https://docs.travis-ci.com/user/reference/overview/
    - {os: linux, dist: bionic,  env: [OS_LABEL="Ubuntu 18.04", TEST_SHELL="bash"]}
    - {os: linux, dist: bionic,  env: [OS_LABEL="Ubuntu 18.04", TEST_SHELL="busybox sh"]}
    - {os: linux, dist: bionic,  env: [OS_LABEL="Ubuntu 18.04", TEST_SHELL="dash"]}
    - {os: linux, dist: bionic,  env: [OS_LABEL="Ubuntu 18.04", TEST_SHELL="sh"]}
    - {os: linux, dist: bionic,  env: [OS_LABEL="Ubuntu 18.04", TEST_SHELL="ksh"]}
    - {os: linux, dist: bionic,  env: [OS_LABEL="Ubuntu 18.04", TEST_SHELL="zsh"]}
    - {os: linux, dist: xenial,  env: [OS_LABEL="Ubuntu 16.04", TEST_SHELL="bash"]}
    - {os: linux, dist: xenial,  env: [OS_LABEL="Ubuntu 16.04", TEST_SHELL="busybox sh"]}
    - {os: linux, dist: xenial,  env: [OS_LABEL="Ubuntu 16.04", TEST_SHELL="dash"]}
    - {os: linux, dist: xenial,  env: [OS_LABEL="Ubuntu 16.04", TEST_SHELL="sh"]}
    - {os: linux, dist: xenial,  env: [OS_LABEL="Ubuntu 16.04", TEST_SHELL="ksh"]}
    - {os: linux, dist: xenial,  env: [OS_LABEL="Ubuntu 16.04", TEST_SHELL="zsh"]}
    - {os: linux, dist: trusty,  env: [OS_LABEL="Ubuntu 14.04", TEST_SHELL="bash"]}
    - {os: linux, dist: trusty,  env: [OS_LABEL="Ubuntu 14.04", TEST_SHELL="busybox sh"]}
    - {os: linux, dist: trusty,  env: [OS_LABEL="Ubuntu 14.04", TEST_SHELL="dash"]}
    - {os: linux, dist: trusty,  env: [OS_LABEL="Ubuntu 14.04", TEST_SHELL="sh"]}
    - {os: linux, dist: trusty,  env: [OS_LABEL="Ubuntu 14.04", TEST_SHELL="ksh"]}
    - {os: linux, dist: trusty,  env: [OS_LABEL="Ubuntu 14.04", TEST_SHELL="zsh"]}
    - {os: osx, env: [TEST_SHELL="bash"]}
    - {os: osx, env: [TEST_SHELL="sh"]}
    - {os: osx, env: [TEST_SHELL="ksh"]}
    - {os: osx, env: [TEST_SHELL="zsh"]}
    - {os: windows, env: [TEST_SHELL="bash"]}

before_script:
  - git clone --depth=2 https://github.com/bats-core/bats-core.git /tmp/bats-repo
  - bash /tmp/bats-repo/install.sh /tmp/bats

script:
  - if command -v shellcheck >/dev/null; then echo "Running [shellcheck]..."; shellcheck -e SC2059 await-*.sh; fi
  - bash tests/test-all.sh
